#!/usr/bin/env bash

set -e

# Debug
set -x

################################################################################

# Location of this script
MY_DIR=$(cd "$(dirname "$0")"; pwd -P)

################################################################################

show_usage()
{
    printf "Usage: $0 <command>\n"
    cat <<EOF
    -C|--clean-all
    -c|--clean
    -b|--build
    -t|--test
    -h|--help

    Example:
      $0 -C -b -t
EOF
    exit 0
}

if [[ $# -lt 1 ]]; then
    show_usage "$@"
fi

clean_all() {
    echo "clean all"   
}

clean() {
    echo "clean"   
}

build() {
    echo "build"   

    install_minimal_dependencies

    
    # Optional requirements, per
    #   https://github.com/aws-samples/amazon-bedrock-workshop/blob/main/00_Intro/bedrock_boto3_setup.ipynb
    # SNAFU: the optional deps are mutually exclusive... So, choose one set of dependencies to install here, or skip all optional dependencies
    #
    # + pip install -qU --no-cache-dir nemoguardrails==0.5.0
    #ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.
    # langchain-experimental 0.0.40 requires langchain>=0.0.308, but you have langchain 0.0.251 which is incompatible.
    #
    # https://github.com/NVIDIA/NeMo-Guardrails/releases
    # ERROR: pip's dependency resolver does not currently take into account all the packages that are installed.
    # This behaviour is the source of the following dependency conflicts.
    # nemoguardrails 0.5.0 requires langchain==0.0.251, but you have langchain 0.0.309 which is incompatible.
    
}

# Minimal requirements, per
#   https://github.com/aws-samples/amazon-bedrock-workshop/blob/main/00_Intro/bedrock_boto3_setup.ipynb
install_minimal_dependencies() {
    sudo apt-get install -y sqlite3 libsqlite3-dev    
    pip install --no-build-isolation --force-reinstall \
    "boto3>=1.28.57" \
    "awscli>=1.29.57" \
    "botocore>=1.31.57"
}

################################################################################
# Optional requirements, per
#   https://github.com/aws-samples/amazon-bedrock-workshop/blob/main/00_Intro/bedrock_boto3_setup.ipynb
################################################################################
text_deps() {
    # TEXT
    pip install --quiet \
    langchain==0.0.309 \
    "transformers>=4.24,<5" \
    sqlalchemy -U \
    "faiss-cpu>=1.7,<2" \
    "pypdf>=3.8,<4" \
    pinecone-client \
    apache-beam \
    datasets \
    tiktoken \
    "ipywidgets>=7,<8" \
    matplotlib
}

agent_deps() {
    # AGENTS
    pip install --quiet \
    xmltodict==0.13.0  \
    duckduckgo-search  \
    yfinance  \
    pandas_datareader  \
    langchain_experimental \
    pysqlite3 \
    google-search-results
}

entity_deps() {
    # ENTITY EXTRACTION
    pip install --quiet beautifulsoup4
}

image_deps() {
    # IMAGE
    pip install --quiet "pillow>=9.5,<10"
}

guardrails_deps() {
    # GUARDRAILS
    sudo apt-get update && sudo apt-get install g++ -y
    pip install -qU --no-cache-dir nemoguardrails==0.5.0
    pip install -qU "faiss-cpu>=1.7,<2" \
        "langchain==0.0.309" \
        "pypdf>=3.8,<4" \
        "ipywidgets>=7,<8"
}
################################################################################

run_script() {
    # The python script MUST be in the repo dir,
    # because the Python script adds the repo dir as a module (for 'utils' etc)
    python3 ./test-bedrock-via-boto.py || echo "Error!"
}

test_all() {
    aws --version

    if aws sts get-caller-identity; then
	run_script
    else
	echo "********************************************************************************"
	echo "You probably need to set up AWS credentials, in ~/.aws/credentials"
	echo "********************************************************************************"
    fi
}


################################################################################

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -C|--clean-all)
        shift
        clean_all
        ;;
    -c|--clean)
        shift
        clean
        ;;
    -b|--build)
        shift
        build
        ;;
    t|--test)
        shift
        test_all
        ;;
    -h|--help)
        show_usage
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done
