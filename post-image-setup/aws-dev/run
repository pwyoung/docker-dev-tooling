#!/usr/bin/env bash

set -e

################################################################################

REPO_NAME='amazon-bedrock-workshop'
REPO="https://github.com/aws-samples/$REPO_NAME.git"
REPO_DIR_PARENT="$HOME/git"
REPO_DIR="$REPO_DIR_PARENT/$REPO_NAME"

# Location of this script
MY_DIR=$(cd "$(dirname "$0")"; pwd -P)

################################################################################

show_usage()
{
    printf "Usage: $0 <command>\n"
    cat <<EOF
    -C|--clean-all
    -c|--clean
    -b|--build
    -t|--test
    -h|--help

    Example:
      $0 -C -b -t
EOF
    exit 0
}

if [[ $# -lt 1 ]]; then
    show_usage "$@"
fi

clean_all() {
    rm -rf "$REPO_DIR"
}

clean() {
    rm -rf "$REPO_DIR/dependencies"
    rm -rf "$REPO_DIR/venv"
    rm -f "$REPO_DIR/test-bedrock-via-boto.py"
}

build() {
    if [ ! -e "$REPO_DIR" ]; then
        mkdir -p "$REPO_DIR_PARENT"
        cd "$REPO_DIR_PARENT"
        git clone "$REPO" "$REPO_NAME"
    fi

    if [ ! -e "$REPO_DIR/dependencies" ]; then
        cd "$REPO_DIR"
        bash ./download-dependencies.sh

    fi

    if ! pip show boto3REINSTALL; then
        cd "$REPO_DIR/dependencies"
        # Avoid https://github.com/yaml/pyyaml/issues/724
        C=./pip-constraints.avoid-pyyaml-issue-724.txt
        echo 'cython < 3.0' > $C
        # Removed force reinstall. Use "make clean" for clean-slate testing.
        # PIP_CONSTRAINT=$C pip install --force-reinstall
        #
        PIP_CONSTRAINT=$C pip install \
                    ../dependencies/awscli-*-py3-none-any.whl \
	            ../dependencies/boto3-*-py3-none-any.whl \
	            ../dependencies/botocore-*-py3-none-any.whl
    fi

    pip install --quiet langchain==0.0.249
}


setup_bedrock() {
    # The python script MUST be in the repo dir,
    # because the Python script adds the repo dir as a module (for 'utils' etc)
    cp "$MY_DIR/test-bedrock-via-boto.py" "$REPO_DIR"
    cd "$REPO_DIR"
    python3 ./test-bedrock-via-boto.py || echo "Setup AWS credentials"
}

test_all() {
    aws --version

    if aws sts get-caller-identity; then
	setup_bedrock
    else
	echo "********************************************************************************"
	echo "You probably need to set up AWS credentials, in ~/home_dev/.aws/credentials"
	echo "********************************************************************************"
    fi
}


################################################################################

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -C|--clean-all)
        shift
        clean_all
        ;;
    -c|--clean)
        shift
        clean
        ;;
    -b|--build)
        shift
        build
        ;;
    t|--test)
        shift
        test_all
        ;;
    -h|--help)
        show_usage
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done
