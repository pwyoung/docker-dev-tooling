#!/usr/bin/env bash

set -e

# Automate setup of Nemo. See:
# - https://github.com/NVIDIA/NeMo
# - https://github.com/NVIDIA/NeMo/blob/main/tutorials/00_NeMo_Primer.ipynb
# - https://galhever.medium.com/getting-started-with-nvidia-nemo-asr-1dc9dc09cecb

################################################################################

REPO_NAME='NeMo'
REPO="https://github.com/NVIDIA/$REPO_NAME.git"
REPO_DIR_PARENT="$HOME/git"
REPO_DIR="$REPO_DIR_PARENT/$REPO_NAME"

# Location of this script
MY_DIR=$(cd "$(dirname "$0")"; pwd -P)

################################################################################

show_usage()
{
    printf "Usage: $0 <command>\n"
    cat <<EOF
    -C|--clean-all
    -c|--clean
    -b|--build
    -t|--test
    -h|--help

    Example:
      $0 -C -b -t
EOF
    exit 0
}

if [[ $# -lt 1 ]]; then
    show_usage "$@"
fi

clean_all() {
    rm -rf "$REPO_DIR"
}

clean() {
    echo "minor cleanup"
}

build() {
    # Clone repo
    if [ ! -e "$REPO_DIR" ]; then
        mkdir -p "$REPO_DIR_PARENT"
        cd "$REPO_DIR_PARENT"
        git clone "$REPO" "$REPO_NAME"
    fi

    # TODO: clean this up after testing
    echo "Skipping this since base image is nemo"
    return

    # This is done outside this script
    # Install dependencies
    #sudo apt-get update && sudo apt-get install -y libsndfile1 ffmpeg

    # https://github.com/NVIDIA/apex#linux
    #   Seems we need >=23
    pip install --upgrade pip

    pip install Cython
    python -m pip install git+https://github.com/NVIDIA/NeMo.git@main

    pip install nemo-asr

    LOG=/tmp/requirements.out
    echo "" > $LOG

    cd "$REPO_DIR/requirements"
    #for i in ./requirements*.txt; do
    #    python -m pip install -r $i
    #done
    F=()
    F+=("requirements.txt")
    F+=("requirements_asr.txt")
    #F+=("requirements_common.txt")
    #F+=("requirements_docs.txt")
    #F+=("requirements_lightning.txt")
    #F+=("requirements_nlp.txt")
    #F+=("requirements_slu.txt")
    #F+=("requirements_test.txt")
    #F+=("requirements_tts.txt")
    #
    for i in "${F[@]}"; do
        python -m pip install -r $i | tee -a $LOG
    done


    # Running the code produced
    # "Megatron-based models require Apex to function correctly."
    mkdir -p ~/nvidia
    cd ~/nvidia
    if [ ! -e ./apex ]; then
        git clone https://github.com/NVIDIA/apex
    fi
    cd apex
    # Fails
    pip install -v --disable-pip-version-check --no-cache-dir --no-build-isolation --config-settings "--build-option=--cpp_ext" --config-settings "--build-option=--cuda_ext" ./
    # Succeeded
    pip install -v --disable-pip-version-check --no-cache-dir --no-build-isolation --global-option="--cpp_ext" --global-option="--cuda_ext" ./


    pip list | grep apex
}

test_all() {
    python --version

}


################################################################################


while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -C|--clean-all)
        shift
        clean_all
        ;;
    -c|--clean)
        shift
        clean
        ;;
    -b|--build)
        shift
        build
        ;;
    t|--test)
        shift
        test_all
        ;;
    -h|--help)
        show_usage
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done
